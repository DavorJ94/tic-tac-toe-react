{"version":3,"sources":["checkIfOver.js","buttonStateXandO.js","tictactoelogo.gif","App.js","checkCurrentState.js","checkCurrentElements.js","index.js"],"names":["lines","checkIfOverGame","xElements","oElements","xPlayer","sort","oPlayer","includedElementsX","includedElementsO","boolXWin","some","item","every","item2","includes","boolOWin","buttonStateXandO","XElements","OElements","allElements","modifiedXElements","forEach","element","Object","values","push","filter","undefined","modifiedOElements","App","INITIAL_STATE","0","1","2","3","4","5","6","7","8","useState","setAllElements","setXElements","setOElements","currentElement","setCurrentElement","buttonState","setButtonState","winner","setWinner","addButtonState","setAddButtonState","useEffect","find","firstStateExists","prevState","over","winnerElement","handleFieldClick","e","currentElementCount","currentElements","count","checkCurrentElementCount","slice","currentIndex","target","getAttribute","prevElements","parseInt","allFields","map","field","index","includedElements","className","name","onClick","handleButtonClick","src","logoImg","alt","buttonData","data-state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAA,IAAMA,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGM,SAASC,EAAgBC,EAAWC,GACjD,IAAMC,EAAU,YAAIF,GAAWG,OACzBC,EAAU,YAAIH,GAAWE,OAC3BE,EAAoB,GACpBC,EAAoB,GAClBC,EAAWT,EAAMU,MAAK,SAACC,GAG3B,OAFIA,EAAKC,OAAM,SAACC,GAAD,OAAWT,EAAQU,SAASD,QACzCN,EAAoBI,GACfA,EAAKC,OAAM,SAACC,GAAD,OAAWT,EAAQU,SAASD,SAE1CE,EAAWf,EAAMU,MAAK,SAACC,GAG3B,OAFIA,EAAKC,OAAM,SAACC,GAAD,OAAWP,EAAQQ,SAASD,QACzCL,EAAoBG,GACfA,EAAKC,OAAM,SAACC,GAAD,OAAWP,EAAQQ,SAASD,SAGhD,OAAIJ,EAAiB,EAAC,EAAM,IAAKF,GAC7BQ,EAAiB,EAAC,EAAM,IAAKP,GAE1B,EAAC,EAAO,IC9BF,SAASQ,EAAiBC,EAAWC,EAAWC,GAC7D,IAAIC,EAAoB,GACxBH,EAAUI,SAAQ,SAACC,GAC2B,MAAxCC,OAAOC,OAAOL,GAAaG,IAC7BF,EAAkBK,KAAKH,MAE3BF,EAAoBA,EAAkBM,QACpC,SAACJ,GAAD,YAAyBK,IAAZL,KAGf,IAAIM,EAAoB,GASxB,OARAV,EAAUG,SAAQ,SAACC,GAC2B,MAAxCC,OAAOC,OAAOL,GAAaG,IAC7BM,EAAkBH,KAAKH,MAE3BM,EAAoBA,EAAkBF,QACpC,SAACJ,GAAD,YAAyBK,IAAZL,KAGR,CAACF,EAAmBQ,GCnBd,UAA0B,0C,OC8J1BC,MAtJf,WACE,IAAMC,EAAgB,CACpBC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAVQ,EAYyBC,mBAASV,GAZlC,mBAYNX,EAZM,KAYOsB,EAZP,OAaqBD,mBAAS,IAb9B,mBAaNtC,EAbM,KAaKwC,EAbL,OAcqBF,mBAAS,IAd9B,mBAcNrC,EAdM,KAcKwC,EAdL,OAe+BH,mBAAS,KAfxC,mBAeNI,EAfM,KAeUC,EAfV,OAgByBL,mBAAS,IAhBlC,mBAgBNM,EAhBM,KAgBOC,EAhBP,OAiBeP,mBAAS,IAjBxB,mBAiBNQ,EAjBM,KAiBEC,EAjBF,OAkB+BT,oBAAS,GAlBxC,mBAkBNU,EAlBM,KAkBUC,EAlBV,KAoBbC,qBAAU,YC5BG,SAA0BjC,GAGvC,OAFqBI,OAAOC,OAAOL,GAAakC,MAAK,SAAC1C,GAAD,MAAmB,KAATA,MD4BzD2C,CAAiBnC,IAAgB+B,GACnCH,GAAe,SAACQ,GAAD,4BAAmBA,GAAnB,CAA8BpC,OAFjC,MAIgBlB,EAAgBC,EAAWC,GAJ3C,mBAIPqD,EAJO,KAIDC,EAJC,KAKJR,EAANO,EAAgBC,EACL,MACd,CAACtC,EAAa+B,EAAgB/C,EAAWD,IAE5C,IAAMwD,EAAmB,SAACC,GAAO,IAAD,EACA1D,EAAgBC,EAAWC,GAD3B,mBACvBqD,EADuB,KACjBC,EADiB,KAE9B,GAAKD,EA8BEP,EAAUQ,OA9BN,CACTN,GAAkB,GAClBF,EAAU,IACV,IAAMW,EE1CG,SAAkCC,GAC/C,IAAIC,GAAS,EAKb,OAJAvC,OAAOC,OAAOqC,GAAiBxC,SAAQ,SAACV,GACzB,KAATA,GAAamD,OAGZA,EFoCyBC,CAAyB5C,GAEnD4B,GAD2B,IAAzBa,EACa,SAACL,GAAD,OACbA,EAAUS,MAAM,EAAGJ,EAAsB,IAEzB,iBAAM,KAC1B,IAAMK,EAAeN,EAAEO,OAAOC,aAAa,QACtC5C,OAAOC,OAAOL,GAAa8C,KAC9BxB,GAAe,SAAC2B,GAAD,mBAAC,eACXA,GADU,kBAEZH,EAAerB,OAGK,MAAnBA,GACFF,GAAa,SAAC0B,GAAD,4BACRA,GADQ,CAEXC,SAASJ,QAEXpB,GAAkB,iBAAM,SAExBF,GAAa,SAACyB,GAAD,4BACRA,GADQ,CAEXC,SAASJ,QAEXpB,GAAkB,iBAAM,WAM1ByB,EAAY/C,OAAOC,OAAOL,GAAaoD,KAAI,SAACC,EAAOC,GAAU,MAEjBxE,EAC9CC,EACAC,GAJ+D,mBAE1DqD,EAF0D,KAErCkB,GAFqC,WAMjE,OACE,qBACEC,UACEnB,GAAQkB,EAAiB5D,SAAS2D,GAC9B,qBACA,QAENG,KAAMH,EAENI,QAASnB,EARX,SAUGc,GAHIC,MAqBLK,EAAoB,SAACnB,GACzBR,GAAkB,GAClB,IAAMc,EAAeN,EAAEO,OAAOC,aAAa,QAC3C1B,GAAe,kBAAMK,EAAYmB,MAEdpB,EAAH,IADAoB,EAAe,EACM,IACd,KANQ,MAOgBjD,EAC7Cd,EACAC,EACA2C,EAAYmB,IAViB,mBAOxB7C,EAPwB,KAOLQ,EAPK,KAY/Bc,GAAa,kBAAMtB,KACnBuB,GAAa,kBAAMf,MAGrB,OACE,sBAAK+C,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAaI,IAAKC,EAASC,IAAI,qBAC7CjC,EACC,oBAAG2B,UAAU,wBAAb,qBAA8C3B,KAE9C,oBAAG2B,UAAU,4BAAb,0BACgB/B,KAGlB,sBAAK+B,UAAU,oBAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBL,IACxB,sBAAKK,UAAU,kBAAf,UACE,wBAAQA,UAAU,aAAaC,KAAK,QAAQC,QA1ChC,WAClBpC,EAAeX,GACfe,EAAkB,KAClBI,EAAU,IAHc,MAIuBjC,EAC7Cd,EACAC,EACA2B,GAPsB,mBAIjBV,EAJiB,KAIEQ,EAJF,KASxBc,GAAa,kBAAMtB,KACnBuB,GAAa,kBAAMf,MAgCb,wBAGCkB,EAAYyB,KAAI,SAACW,EAAYT,GAC5B,OACE,yBACEE,UAAU,aACVC,KAAMH,EAENU,aAAYD,EACZL,QAASC,EALX,mBAOSL,EAAQ,IAJVA,gBG3IrBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3f8f0f8b.chunk.js","sourcesContent":["const lines = [\r\n  [0, 1, 2],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n  [0, 3, 6],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [0, 4, 8],\r\n  [2, 4, 6],\r\n];\r\n\r\nexport default function checkIfOverGame(xElements, oElements) {\r\n  const xPlayer = [...xElements].sort();\r\n  const oPlayer = [...oElements].sort();\r\n  let includedElementsX = [];\r\n  let includedElementsO = [];\r\n  const boolXWin = lines.some((item) => {\r\n    if (item.every((item2) => xPlayer.includes(item2)))\r\n      includedElementsX = item;\r\n    return item.every((item2) => xPlayer.includes(item2));\r\n  });\r\n  const boolOWin = lines.some((item) => {\r\n    if (item.every((item2) => oPlayer.includes(item2)))\r\n      includedElementsO = item;\r\n    return item.every((item2) => oPlayer.includes(item2));\r\n  });\r\n\r\n  if (boolXWin) return [true, \"X\", includedElementsX];\r\n  if (boolOWin) return [true, \"O\", includedElementsO];\r\n\r\n  return [false, \"\"];\r\n}\r\n","export default function buttonStateXandO(XElements, OElements, allElements) {\r\n  let modifiedXElements = [];\r\n  XElements.forEach((element) => {\r\n    if (Object.values(allElements)[element] === \"X\")\r\n      modifiedXElements.push(element);\r\n  });\r\n  modifiedXElements = modifiedXElements.filter(\r\n    (element) => element !== undefined\r\n  );\r\n\r\n  let modifiedOElements = [];\r\n  OElements.forEach((element) => {\r\n    if (Object.values(allElements)[element] === \"O\")\r\n      modifiedOElements.push(element);\r\n  });\r\n  modifiedOElements = modifiedOElements.filter(\r\n    (element) => element !== undefined\r\n  );\r\n\r\n  return [modifiedXElements, modifiedOElements];\r\n}\r\n","export default __webpack_public_path__ + \"static/media/tictactoelogo.3a485eac.gif\";","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport firstStateExists from \"./checkCurrentState\";\nimport checkCurrentElementCount from \"./checkCurrentElements\";\nimport checkIfOverGame from \"./checkIfOver\";\nimport buttonStateXandO from \"./buttonStateXandO\";\nimport logoImg from \"./tictactoelogo.gif\";\n\nfunction App() {\n  const INITIAL_STATE = {\n    0: \"\",\n    1: \"\",\n    2: \"\",\n    3: \"\",\n    4: \"\",\n    5: \"\",\n    6: \"\",\n    7: \"\",\n    8: \"\",\n  };\n  const [allElements, setAllElements] = useState(INITIAL_STATE);\n  const [xElements, setXElements] = useState([]);\n  const [oElements, setOElements] = useState([]);\n  const [currentElement, setCurrentElement] = useState(\"X\");\n  const [buttonState, setButtonState] = useState([]);\n  const [winner, setWinner] = useState(\"\");\n  const [addButtonState, setAddButtonState] = useState(true);\n\n  useEffect(() => {\n    if (firstStateExists(allElements) && addButtonState) {\n      setButtonState((prevState) => [...prevState, allElements]);\n    }\n    const [over, winnerElement] = checkIfOverGame(xElements, oElements);\n    if (over) setWinner(winnerElement);\n    else setWinner(\"\");\n  }, [allElements, addButtonState, oElements, xElements]);\n\n  const handleFieldClick = (e) => {\n    const [over, winnerElement] = checkIfOverGame(xElements, oElements);\n    if (!over) {\n      setAddButtonState(true);\n      setWinner(\"\");\n      const currentElementCount = checkCurrentElementCount(allElements);\n      if (currentElementCount !== -1)\n        setButtonState((prevState) =>\n          prevState.slice(0, currentElementCount + 1)\n        );\n      else setButtonState(() => []);\n      const currentIndex = e.target.getAttribute(\"name\");\n      if (!Object.values(allElements)[currentIndex]) {\n        setAllElements((prevElements) => ({\n          ...prevElements,\n          [currentIndex]: currentElement,\n        }));\n\n        if (currentElement === \"X\") {\n          setXElements((prevElements) => [\n            ...prevElements,\n            parseInt(currentIndex),\n          ]);\n          setCurrentElement(() => \"O\");\n        } else {\n          setOElements((prevElements) => [\n            ...prevElements,\n            parseInt(currentIndex),\n          ]);\n          setCurrentElement(() => \"X\");\n        }\n      }\n    } else setWinner(winnerElement);\n  };\n\n  const allFields = Object.values(allElements).map((field, index) => {\n    // eslint-disable-next-line\n    const [over, winnerElement, includedElements] = checkIfOverGame(\n      xElements,\n      oElements\n    );\n    return (\n      <div\n        className={\n          over && includedElements.includes(index)\n            ? \"field winningField\"\n            : \"field\"\n        }\n        name={index}\n        key={index}\n        onClick={handleFieldClick}\n      >\n        {field}\n      </div>\n    );\n  });\n\n  const handleReset = () => {\n    setAllElements(INITIAL_STATE);\n    setCurrentElement(\"X\");\n    setWinner(\"\");\n    const [modifiedXElements, modifiedOElements] = buttonStateXandO(\n      xElements,\n      oElements,\n      INITIAL_STATE\n    );\n    setXElements(() => modifiedXElements);\n    setOElements(() => modifiedOElements);\n  };\n\n  const handleButtonClick = (e) => {\n    setAddButtonState(false);\n    const currentIndex = e.target.getAttribute(\"name\");\n    setAllElements(() => buttonState[currentIndex]);\n    const setXOrO = currentIndex % 2;\n    if (setXOrO === 1) setCurrentElement(\"X\");\n    else setCurrentElement(\"O\");\n    const [modifiedXElements, modifiedOElements] = buttonStateXandO(\n      xElements,\n      oElements,\n      buttonState[currentIndex]\n    );\n    setXElements(() => modifiedXElements);\n    setOElements(() => modifiedOElements);\n  };\n\n  return (\n    <div className=\"App\">\n      <img className=\"logo-image\" src={logoImg} alt=\"tic-tac-toe logo\" />\n      {winner ? (\n        <p className=\"message winnerMessage\">Winner: {winner}</p>\n      ) : (\n        <p className=\"message nextPlayerMessage\">\n          Next player: {currentElement}\n        </p>\n      )}\n      <div className=\"btnTableContainer\">\n        <div className=\"table\">{allFields}</div>\n        <div className=\"buttonContainer\">\n          <button className=\"buttonTime\" name=\"reset\" onClick={handleReset}>\n            Game start\n          </button>\n          {buttonState.map((buttonData, index) => {\n            return (\n              <button\n                className=\"buttonTime\"\n                name={index}\n                key={index}\n                data-state={buttonData}\n                onClick={handleButtonClick}\n              >\n                Move #{index + 1}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export default function firstStateExists(allElements) {\r\n  const isFirstState = Object.values(allElements).find((item) => item !== \"\");\r\n\r\n  return isFirstState;\r\n}\r\n","export default function checkCurrentElementCount(currentElements) {\r\n  let count = -1;\r\n  Object.values(currentElements).forEach((item) => {\r\n    if (item !== \"\") count++;\r\n  });\r\n\r\n  return count;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}